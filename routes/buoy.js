var express = require('express');
var router = express.Router();
var path = require('path');
var exec = require('child_process').exec;


//Argument object for generating correct buoy arguments
var pyArgs = {
  "buoy": '46232',
  "datasource": 'http',
  "json": true,
  "datatype": "spectra",
  "units": 'ft'
};

//Generate flags for the python script call
function flagGen(args) {
  var flags = '';
  for (var a in args) {
    if (args.hasOwnProperty(a)) {
      if (typeof(pyArgs[a]) == 'string'){
        flags += " --" + a + ' ' + pyArgs[a];
      }
      else {
        if (pyArgs[a] == true)
          flags += ' --' + a;
      }
    }
  }
  return flags;
}


/*****************
FunctionName: run_script()
globals: pythonData
params:
purpose: Take arguments generated by flagGen and execute a python script. This function is a promise which must be executed before response for the buoy page.
return: resolve()
******************/

var pythonData;

function run_script(){
  return new Promise(function(resolve, reject){
    var execstr = 'python ' + path.join('./', 'ndbc.py') + flagGen(pyArgs);
    exec(execstr, function(error, stdout, stderr) {
      if (error) {
        console.log(stderr)
      }
      else {
        pythonData = JSON.parse(stdout);
        return resolve();
      }
    });
  });
}

/*****************
FunctionName: check_if_query_exists
Params: req, queryVal
globals: pyArgs
purpose: if query variable exists, set the global argument object value to the query variable's value.
return: N/A
******************/

function check_if_query_exists(req, queryVal){
  if(req.query[queryVal] != undefined){
    pyArgs[queryVal] = req.query[queryVal];
  }
}

/* GET buoy page. */
router.get('/', function(req, res, next) {
  check_if_query_exists(req, 'buoy');
  check_if_query_exists(req, 'datasource');
  check_if_query_exists(req, 'json');
  check_if_query_exists(req, 'datatype');
  check_if_query_exists(req, 'units');
  run_script().then(function(data){
    res.setHeader('Content-Type', 'application/json');
    res.send(pythonData);
  })
});


module.exports = router;
